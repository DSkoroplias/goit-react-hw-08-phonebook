{"version":3,"file":"static/js/381.5c768aa7.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/modules/Phonebook/ContactForm/contact-form.module.scss?1d1b","modules/Phonebook/ContactForm/ContactForm.jsx","redux/contacts/contacts-selectors.js","webpack://goit-react-hw-08-phonebook/./src/modules/Phonebook/ContactListEl/contact-list-el.module.scss?a429","modules/Phonebook/ContactListEl/ContactListEl.jsx","modules/Phonebook/ContactList/contact-list.module.scss","modules/Phonebook/ContactList/ContactList.jsx","redux/filter/filter-selector.js","webpack://goit-react-hw-08-phonebook/./src/modules/Phonebook/ContactFilter/contact-filter.module.scss?5ecc","modules/Phonebook/ContactFilter/ContactFilter.jsx","webpack://goit-react-hw-08-phonebook/./src/modules/Phonebook/phonebook.module.scss?7709","modules/Phonebook/Phonebook.jsx","page/MyContacts/MyContacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"block\":\"contact-form_block__kwj7e\",\"formGroup\":\"contact-form_formGroup__iRivu\",\"button\":\"contact-form_button__Kfuu1\"};","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  fetchAllContacts,\n  fetchAddContacts,\n} from '../../../redux/contacts/contacts-operations';\n\nimport styles from './contact-form.module.scss';\n\nconst ContactForm = () => {\n  const [state, setState] = useState({\n    name: '',\n    number: '',\n  });\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleAddContact({ name, number });\n    setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  const handleAddContact = ({ name, number }) => {\n    dispatch(fetchAddContacts({ name, number }));\n  };\n\n  const { name, number } = state;\n\n  return (\n    <div className={styles.block}>\n      <form onSubmit={handleSubmit}>\n        <div className={styles.formGroup}>\n          <label>Name</label>\n          <input\n            onChange={handleChange}\n            value={name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </div>\n        <div className={styles.formGroup}>\n          <label>Number</label>\n          <input\n            onChange={handleChange}\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </div>\n        <button className={styles.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","export const getAllContacts = ({ contacts }) => contacts.items;\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n  const normalizedFilter = filter.toLowerCase();\n  const result = contacts.items.filter(({ name }) => {\n    return name.toLowerCase().includes(normalizedFilter);\n  });\n\n  return result;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"contact-list-el_listItem__uEAN0\",\"button\":\"contact-list-el_button__c1F5W\"};","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport styles from './contact-list-el.module.scss';\n\nconst ContactListEl = ({ id, name, number, removeContact }) => {\n  return (\n    <ul>\n      <li className={styles.listItem} key={id}>\n        {name}: {number}\n        <button className={styles.button} onClick={removeContact} type=\"button\">\n          Delete\n        </button>\n      </li>\n    </ul>\n  );\n};\n\nexport default ContactListEl;\n\nContactListEl.propTypes = {\n  removeContact: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { fetchDeleteContacts } from '../../../redux/contacts/contacts-operations';\n\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\n\nimport ContactListEl from '../ContactListEl/ContactListEl';\n\nimport styles from './contact-list.module.scss';\n\nconst ContactList = () => {\n  const filteredContacts = useSelector(getFilteredContacts);\n\n  const dispatch = useDispatch();\n\n  const handleRemoveContact = id => {\n    dispatch(fetchDeleteContacts(id));\n  };\n\n  return (\n    <div className={styles.contacts}>\n      {filteredContacts.map(({ id, name, number }) => (\n        <ContactListEl\n          key={id}\n          name={name}\n          number={number}\n          removeContact={() => handleRemoveContact(id)}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default ContactList;\n\nContactList.defaultProps = {\n  contacts: [],\n};\n\nContactList.propTypes = {\n  removeContact: PropTypes.func,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","export const getFilter = ({ filter }) => filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"formGroup\":\"contact-filter_formGroup__7NSTt\",\"formInput\":\"contact-filter_formInput__DB-2p\",\"formLabel\":\"contact-filter_formLabel__2ihCv\"};","import { useSelector, useDispatch } from 'react-redux';\n\nimport { getFilter } from 'redux/filter/filter-selector';\nimport { setFilter } from 'redux/filter/filter-slice';\nimport styles from './contact-filter.module.scss';\n\nconst ContactFilter = () => {\n  const handleFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div className={styles.formGroup}>\n      <input\n        className={styles.formInput}\n        value={filter}\n        onChange={handleFilter}\n        name=\"filter\"\n        type=\"text\"\n      />\n      <label className={styles.formLabel}>Filter books</label>\n    </div>\n  );\n};\n\nexport default ContactFilter;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"phonebook_wrapper__U-FYE\",\"block\":\"phonebook_block__jmJea\",\"block_phonebook\":\"phonebook_block_phonebook__yKn6D\"};","import { useSelector } from 'react-redux';\n\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport ContactFilter from './ContactFilter/ContactFilter';\n\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\n\nimport styles from './phonebook.module.scss';\n\nconst Phonebook = () => {\n  const filteredContacts = useSelector(getFilteredContacts);\n\n  const isContacts = Boolean(filteredContacts.length);\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.block_phonebook}>\n        <h1>Phonebook</h1>\n        <ContactForm />\n      </div>\n      <div className={styles.block}>\n        <h1>Contacts</h1>\n        <ContactFilter />\n        {isContacts && <ContactList />}\n        {!isContacts && <p>No contacts</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default Phonebook;\n","import Phonebook from 'modules/Phonebook/Phonebook';\n\nconst MyContacts = () => {\n  return (\n    <>\n      <Phonebook />\n    </>\n  );\n};\n\nexport default MyContacts;\n"],"names":["useState","name","number","state","setState","dispatch","useDispatch","useEffect","fetchAllContacts","handleChange","target","value","prevState","handleAddContact","fetchAddContacts","className","styles","onSubmit","e","preventDefault","onChange","type","pattern","title","required","getFilteredContacts","contacts","filter","items","normalizedFilter","toLowerCase","includes","id","removeContact","onClick","ContactList","filteredContacts","useSelector","map","fetchDeleteContacts","handleRemoveContact","defaultProps","getFilter","setFilter","isContacts","Boolean","length"],"sourceRoot":""}